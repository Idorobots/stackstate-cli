/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_client

import (
	"encoding/json"
)

// SettingScript struct for SettingScript
type SettingScript struct {
	ScriptBody *string `json:"scriptBody,omitempty"`
}

// NewSettingScript instantiates a new SettingScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingScript() *SettingScript {
	this := SettingScript{}
	return &this
}

// NewSettingScriptWithDefaults instantiates a new SettingScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingScriptWithDefaults() *SettingScript {
	this := SettingScript{}
	return &this
}

// GetScriptBody returns the ScriptBody field value if set, zero value otherwise.
func (o *SettingScript) GetScriptBody() string {
	if o == nil || o.ScriptBody == nil {
		var ret string
		return ret
	}
	return *o.ScriptBody
}

// GetScriptBodyOk returns a tuple with the ScriptBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingScript) GetScriptBodyOk() (*string, bool) {
	if o == nil || o.ScriptBody == nil {
		return nil, false
	}
	return o.ScriptBody, true
}

// HasScriptBody returns a boolean if a field has been set.
func (o *SettingScript) HasScriptBody() bool {
	if o != nil && o.ScriptBody != nil {
		return true
	}

	return false
}

// SetScriptBody gets a reference to the given string and assigns it to the ScriptBody field.
func (o *SettingScript) SetScriptBody(v string) {
	o.ScriptBody = &v
}

func (o SettingScript) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScriptBody != nil {
		toSerialize["scriptBody"] = o.ScriptBody
	}
	return json.Marshal(toSerialize)
}

type NullableSettingScript struct {
	value *SettingScript
	isSet bool
}

func (v NullableSettingScript) Get() *SettingScript {
	return v.value
}

func (v *NullableSettingScript) Set(val *SettingScript) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingScript) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingScript(val *SettingScript) *NullableSettingScript {
	return &NullableSettingScript{value: val, isSet: true}
}

func (v NullableSettingScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
