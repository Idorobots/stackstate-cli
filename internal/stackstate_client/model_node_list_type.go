/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_client

import (
	"encoding/json"
)

// NodeListType struct for NodeListType
type NodeListType struct {
	TypeName            string `json:"typeName"`
	Id                  int64  `json:"id"`
	LastUpdateTimestamp int64  `json:"lastUpdateTimestamp"`
	Identifier          string `json:"identifier"`
	Name                string `json:"name"`
	Description         string `json:"description"`
	OwnedBy             string `json:"ownedBy"`
	Manual              bool   `json:"manual"`
	IsSettingsNode      bool   `json:"isSettingsNode"`
}

// NewNodeListType instantiates a new NodeListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeListType(typeName string, id int64, lastUpdateTimestamp int64, identifier string, name string, description string, ownedBy string, manual bool, isSettingsNode bool) *NodeListType {
	this := NodeListType{}
	this.TypeName = typeName
	this.Id = id
	this.LastUpdateTimestamp = lastUpdateTimestamp
	this.Identifier = identifier
	this.Name = name
	this.Description = description
	this.OwnedBy = ownedBy
	this.Manual = manual
	this.IsSettingsNode = isSettingsNode
	return &this
}

// NewNodeListTypeWithDefaults instantiates a new NodeListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeListTypeWithDefaults() *NodeListType {
	this := NodeListType{}
	return &this
}

// GetTypeName returns the TypeName field value
func (o *NodeListType) GetTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeName, true
}

// SetTypeName sets field value
func (o *NodeListType) SetTypeName(v string) {
	o.TypeName = v
}

// GetId returns the Id field value
func (o *NodeListType) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NodeListType) SetId(v int64) {
	o.Id = v
}

// GetLastUpdateTimestamp returns the LastUpdateTimestamp field value
func (o *NodeListType) GetLastUpdateTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdateTimestamp
}

// GetLastUpdateTimestampOk returns a tuple with the LastUpdateTimestamp field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetLastUpdateTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdateTimestamp, true
}

// SetLastUpdateTimestamp sets field value
func (o *NodeListType) SetLastUpdateTimestamp(v int64) {
	o.LastUpdateTimestamp = v
}

// GetIdentifier returns the Identifier field value
func (o *NodeListType) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *NodeListType) SetIdentifier(v string) {
	o.Identifier = v
}

// GetName returns the Name field value
func (o *NodeListType) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NodeListType) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *NodeListType) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *NodeListType) SetDescription(v string) {
	o.Description = v
}

// GetOwnedBy returns the OwnedBy field value
func (o *NodeListType) GetOwnedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetOwnedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnedBy, true
}

// SetOwnedBy sets field value
func (o *NodeListType) SetOwnedBy(v string) {
	o.OwnedBy = v
}

// GetManual returns the Manual field value
func (o *NodeListType) GetManual() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Manual
}

// GetManualOk returns a tuple with the Manual field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetManualOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manual, true
}

// SetManual sets field value
func (o *NodeListType) SetManual(v bool) {
	o.Manual = v
}

// GetIsSettingsNode returns the IsSettingsNode field value
func (o *NodeListType) GetIsSettingsNode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSettingsNode
}

// GetIsSettingsNodeOk returns a tuple with the IsSettingsNode field value
// and a boolean to check if the value has been set.
func (o *NodeListType) GetIsSettingsNodeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSettingsNode, true
}

// SetIsSettingsNode sets field value
func (o *NodeListType) SetIsSettingsNode(v bool) {
	o.IsSettingsNode = v
}

func (o NodeListType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["typeName"] = o.TypeName
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["lastUpdateTimestamp"] = o.LastUpdateTimestamp
	}
	if true {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["ownedBy"] = o.OwnedBy
	}
	if true {
		toSerialize["manual"] = o.Manual
	}
	if true {
		toSerialize["isSettingsNode"] = o.IsSettingsNode
	}
	return json.Marshal(toSerialize)
}

type NullableNodeListType struct {
	value *NodeListType
	isSet bool
}

func (v NullableNodeListType) Get() *NodeListType {
	return v.value
}

func (v *NullableNodeListType) Set(val *NodeListType) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeListType) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeListType(val *NodeListType) *NullableNodeListType {
	return &NullableNodeListType{value: val, isSet: true}
}

func (v NullableNodeListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
