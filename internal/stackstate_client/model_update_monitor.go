/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_client

import (
	"encoding/json"
)

// UpdateMonitor struct for UpdateMonitor
type UpdateMonitor struct {
	Name *string `json:"name,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	Description *string `json:"description,omitempty"`
	FunctionId *int64 `json:"functionId,omitempty"`
	Parameters *map[string]interface{} `json:"parameters,omitempty"`
	RemediationHint *string `json:"remediationHint,omitempty"`
	TopologyMapping *string `json:"topologyMapping,omitempty"`
	IntervalSeconds *int32 `json:"intervalSeconds,omitempty"`
}

// NewUpdateMonitor instantiates a new UpdateMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMonitor() *UpdateMonitor {
	this := UpdateMonitor{}
	return &this
}

// NewUpdateMonitorWithDefaults instantiates a new UpdateMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMonitorWithDefaults() *UpdateMonitor {
	this := UpdateMonitor{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateMonitor) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMonitor) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateMonitor) SetName(v string) {
	o.Name = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *UpdateMonitor) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *UpdateMonitor) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *UpdateMonitor) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateMonitor) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateMonitor) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateMonitor) SetDescription(v string) {
	o.Description = &v
}

// GetFunctionId returns the FunctionId field value if set, zero value otherwise.
func (o *UpdateMonitor) GetFunctionId() int64 {
	if o == nil || o.FunctionId == nil {
		var ret int64
		return ret
	}
	return *o.FunctionId
}

// GetFunctionIdOk returns a tuple with the FunctionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetFunctionIdOk() (*int64, bool) {
	if o == nil || o.FunctionId == nil {
		return nil, false
	}
	return o.FunctionId, true
}

// HasFunctionId returns a boolean if a field has been set.
func (o *UpdateMonitor) HasFunctionId() bool {
	if o != nil && o.FunctionId != nil {
		return true
	}

	return false
}

// SetFunctionId gets a reference to the given int64 and assigns it to the FunctionId field.
func (o *UpdateMonitor) SetFunctionId(v int64) {
	o.FunctionId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *UpdateMonitor) GetParameters() map[string]interface{} {
	if o == nil || o.Parameters == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetParametersOk() (*map[string]interface{}, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *UpdateMonitor) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *UpdateMonitor) SetParameters(v map[string]interface{}) {
	o.Parameters = &v
}

// GetRemediationHint returns the RemediationHint field value if set, zero value otherwise.
func (o *UpdateMonitor) GetRemediationHint() string {
	if o == nil || o.RemediationHint == nil {
		var ret string
		return ret
	}
	return *o.RemediationHint
}

// GetRemediationHintOk returns a tuple with the RemediationHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetRemediationHintOk() (*string, bool) {
	if o == nil || o.RemediationHint == nil {
		return nil, false
	}
	return o.RemediationHint, true
}

// HasRemediationHint returns a boolean if a field has been set.
func (o *UpdateMonitor) HasRemediationHint() bool {
	if o != nil && o.RemediationHint != nil {
		return true
	}

	return false
}

// SetRemediationHint gets a reference to the given string and assigns it to the RemediationHint field.
func (o *UpdateMonitor) SetRemediationHint(v string) {
	o.RemediationHint = &v
}

// GetTopologyMapping returns the TopologyMapping field value if set, zero value otherwise.
func (o *UpdateMonitor) GetTopologyMapping() string {
	if o == nil || o.TopologyMapping == nil {
		var ret string
		return ret
	}
	return *o.TopologyMapping
}

// GetTopologyMappingOk returns a tuple with the TopologyMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetTopologyMappingOk() (*string, bool) {
	if o == nil || o.TopologyMapping == nil {
		return nil, false
	}
	return o.TopologyMapping, true
}

// HasTopologyMapping returns a boolean if a field has been set.
func (o *UpdateMonitor) HasTopologyMapping() bool {
	if o != nil && o.TopologyMapping != nil {
		return true
	}

	return false
}

// SetTopologyMapping gets a reference to the given string and assigns it to the TopologyMapping field.
func (o *UpdateMonitor) SetTopologyMapping(v string) {
	o.TopologyMapping = &v
}

// GetIntervalSeconds returns the IntervalSeconds field value if set, zero value otherwise.
func (o *UpdateMonitor) GetIntervalSeconds() int32 {
	if o == nil || o.IntervalSeconds == nil {
		var ret int32
		return ret
	}
	return *o.IntervalSeconds
}

// GetIntervalSecondsOk returns a tuple with the IntervalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitor) GetIntervalSecondsOk() (*int32, bool) {
	if o == nil || o.IntervalSeconds == nil {
		return nil, false
	}
	return o.IntervalSeconds, true
}

// HasIntervalSeconds returns a boolean if a field has been set.
func (o *UpdateMonitor) HasIntervalSeconds() bool {
	if o != nil && o.IntervalSeconds != nil {
		return true
	}

	return false
}

// SetIntervalSeconds gets a reference to the given int32 and assigns it to the IntervalSeconds field.
func (o *UpdateMonitor) SetIntervalSeconds(v int32) {
	o.IntervalSeconds = &v
}

func (o UpdateMonitor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FunctionId != nil {
		toSerialize["functionId"] = o.FunctionId
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.RemediationHint != nil {
		toSerialize["remediationHint"] = o.RemediationHint
	}
	if o.TopologyMapping != nil {
		toSerialize["topologyMapping"] = o.TopologyMapping
	}
	if o.IntervalSeconds != nil {
		toSerialize["intervalSeconds"] = o.IntervalSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateMonitor struct {
	value *UpdateMonitor
	isSet bool
}

func (v NullableUpdateMonitor) Get() *UpdateMonitor {
	return v.value
}

func (v *NullableUpdateMonitor) Set(val *UpdateMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMonitor(val *UpdateMonitor) *NullableUpdateMonitor {
	return &NullableUpdateMonitor{value: val, isSet: true}
}

func (v NullableUpdateMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


