/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_client

import (
	"encoding/json"
)

// MonitorList struct for MonitorList
type MonitorList struct {
	Monitors []Monitor `json:"monitors"`
}

// NewMonitorList instantiates a new MonitorList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorList(monitors []Monitor) *MonitorList {
	this := MonitorList{}
	this.Monitors = monitors
	return &this
}

// NewMonitorListWithDefaults instantiates a new MonitorList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorListWithDefaults() *MonitorList {
	this := MonitorList{}
	return &this
}

// GetMonitors returns the Monitors field value
func (o *MonitorList) GetMonitors() []Monitor {
	if o == nil {
		var ret []Monitor
		return ret
	}

	return o.Monitors
}

// GetMonitorsOk returns a tuple with the Monitors field value
// and a boolean to check if the value has been set.
func (o *MonitorList) GetMonitorsOk() ([]Monitor, bool) {
	if o == nil {
		return nil, false
	}
	return o.Monitors, true
}

// SetMonitors sets field value
func (o *MonitorList) SetMonitors(v []Monitor) {
	o.Monitors = v
}

func (o MonitorList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["monitors"] = o.Monitors
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorList struct {
	value *MonitorList
	isSet bool
}

func (v NullableMonitorList) Get() *MonitorList {
	return v.value
}

func (v *NullableMonitorList) Set(val *MonitorList) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorList) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorList(val *MonitorList) *NullableMonitorList {
	return &NullableMonitorList{value: val, isSet: true}
}

func (v NullableMonitorList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


