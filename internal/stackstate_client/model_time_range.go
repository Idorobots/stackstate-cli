/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_client

import (
	"encoding/json"
)

// TimeRange struct for TimeRange
type TimeRange struct {
	Type string `json:"_type"`
	End int64 `json:"end"`
	Start int64 `json:"start"`
}

// NewTimeRange instantiates a new TimeRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeRange(type_ string, end int64, start int64) *TimeRange {
	this := TimeRange{}
	this.Type = type_
	this.End = end
	this.Start = start
	return &this
}

// NewTimeRangeWithDefaults instantiates a new TimeRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeRangeWithDefaults() *TimeRange {
	this := TimeRange{}
	return &this
}

// GetType returns the Type field value
func (o *TimeRange) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TimeRange) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TimeRange) SetType(v string) {
	o.Type = v
}

// GetEnd returns the End field value
func (o *TimeRange) GetEnd() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *TimeRange) GetEndOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *TimeRange) SetEnd(v int64) {
	o.End = v
}

// GetStart returns the Start field value
func (o *TimeRange) GetStart() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *TimeRange) GetStartOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *TimeRange) SetStart(v int64) {
	o.Start = v
}

func (o TimeRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["end"] = o.End
	}
	if true {
		toSerialize["start"] = o.Start
	}
	return json.Marshal(toSerialize)
}

type NullableTimeRange struct {
	value *TimeRange
	isSet bool
}

func (v NullableTimeRange) Get() *TimeRange {
	return v.value
}

func (v *NullableTimeRange) Set(val *TimeRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeRange(val *TimeRange) *NullableTimeRange {
	return &NullableTimeRange{value: val, isSet: true}
}

func (v NullableTimeRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


