/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_client

import (
	"encoding/json"
)

// StreamList struct for StreamList
type StreamList struct {
	Items []StreamListItem `json:"items"`
}

// NewStreamList instantiates a new StreamList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamList(items []StreamListItem) *StreamList {
	this := StreamList{}
	this.Items = items
	return &this
}

// NewStreamListWithDefaults instantiates a new StreamList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamListWithDefaults() *StreamList {
	this := StreamList{}
	return &this
}

// GetItems returns the Items field value
func (o *StreamList) GetItems() []StreamListItem {
	if o == nil {
		var ret []StreamListItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *StreamList) GetItemsOk() ([]StreamListItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *StreamList) SetItems(v []StreamListItem) {
	o.Items = v
}

func (o StreamList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableStreamList struct {
	value *StreamList
	isSet bool
}

func (v NullableStreamList) Get() *StreamList {
	return v.value
}

func (v *NullableStreamList) Set(val *StreamList) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamList) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamList(val *StreamList) *NullableStreamList {
	return &NullableStreamList{value: val, isSet: true}
}

func (v NullableStreamList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


