name: CI
on:
  pull_request:
    branches: [ main ]

  # Allows to run this via the Actions tab
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v17
        with:
          nix_conf:
            experimental-features = nix-command flakes

      - name: Compute Image Checksum
        run: echo "NIX_CHECKSUM=$(cat flake.* | md5sum | awk '{print $1}')" >> $GITHUB_ENV

      - name: Run Nix
        run: |
          nix profile install nixpkgs#docker
          nix build .#ci-image

      - name: Publish base image
        env:
          DOCKER_TLS_CERTDIR: ""
          CI_BASE_IMAGE_PUSH: quay.io/stackstate/sts-ci-images:stackstate-cli2-${{ env.NIX_CHECKSUM }}
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | docker login --username=${{ secrets.QUAY_USER }} --password-stdin quay.io
          docker load < result
          docker tag stackstate-cli2-ci:latest $CI_BASE_IMAGE_PUSH
          docker push $CI_BASE_IMAGE_PUSH

      - name: Go base
        run: echo "TODO"
    outputs:
      nixChecksum: ${{ env.NIX_CHECKSUM }}
      ciImageName: stackstate/sts-ci-images:stackstate-cli2-${{ env.NIX_CHECKSUM }}

  check:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Lint
        uses: addnab/docker-run-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWORD }}
          image: ${{ needs.setup.outputs.ciImageName }}
          run: |
            cd /github/workspace
            ./scripts/lint.sh

      - name: Check StackState API up to date
        uses: addnab/docker-run-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWORD }}
          image: ${{ needs.setup.outputs.ciImageName }}
          run: ./scripts/check_stackstate_api_up-to-date.sh

      - name: License scanning
        run: echo "TODO"

      - name: Dependency scanning
        run: echo "TODO"

      - name: Go releaser check
        run: goreleaser check

      - name: Compile test
        run: go test ./... -v

  deploy:
    needs: [setup, check]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Generate release notes
        run: echo "TODO"

      - name: Publish
        run: echo "TODO"

