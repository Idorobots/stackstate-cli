/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PromVectorResult struct for PromVectorResult
type PromVectorResult struct {
	Metric map[string]string `json:"metric"`
	// This is always a tuple represented as an array with in first position the unix timestamp as  a float with precision 3 in seconds) and in second position the sample value as a string. 
	Value []PromSampleInner `json:"value"`
}

// NewPromVectorResult instantiates a new PromVectorResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromVectorResult(metric map[string]string, value []PromSampleInner) *PromVectorResult {
	this := PromVectorResult{}
	this.Metric = metric
	this.Value = value
	return &this
}

// NewPromVectorResultWithDefaults instantiates a new PromVectorResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromVectorResultWithDefaults() *PromVectorResult {
	this := PromVectorResult{}
	return &this
}

// GetMetric returns the Metric field value
func (o *PromVectorResult) GetMetric() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *PromVectorResult) GetMetricOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *PromVectorResult) SetMetric(v map[string]string) {
	o.Metric = v
}

// GetValue returns the Value field value
func (o *PromVectorResult) GetValue() []PromSampleInner {
	if o == nil {
		var ret []PromSampleInner
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PromVectorResult) GetValueOk() ([]PromSampleInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *PromVectorResult) SetValue(v []PromSampleInner) {
	o.Value = v
}

func (o PromVectorResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metric"] = o.Metric
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullablePromVectorResult struct {
	value *PromVectorResult
	isSet bool
}

func (v NullablePromVectorResult) Get() *PromVectorResult {
	return v.value
}

func (v *NullablePromVectorResult) Set(val *PromVectorResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePromVectorResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePromVectorResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromVectorResult(val *PromVectorResult) *NullablePromVectorResult {
	return &NullablePromVectorResult{value: val, isSet: true}
}

func (v NullablePromVectorResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromVectorResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


