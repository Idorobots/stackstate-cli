/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// RevokePermission struct for RevokePermission
type RevokePermission struct {
	Permission string `json:"permission"`
	Resource   string `json:"resource"`
}

// NewRevokePermission instantiates a new RevokePermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevokePermission(permission string, resource string) *RevokePermission {
	this := RevokePermission{}
	this.Permission = permission
	this.Resource = resource
	return &this
}

// NewRevokePermissionWithDefaults instantiates a new RevokePermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokePermissionWithDefaults() *RevokePermission {
	this := RevokePermission{}
	return &this
}

// GetPermission returns the Permission field value
func (o *RevokePermission) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *RevokePermission) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *RevokePermission) SetPermission(v string) {
	o.Permission = v
}

// GetResource returns the Resource field value
func (o *RevokePermission) GetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *RevokePermission) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *RevokePermission) SetResource(v string) {
	o.Resource = v
}

func (o RevokePermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permission"] = o.Permission
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableRevokePermission struct {
	value *RevokePermission
	isSet bool
}

func (v NullableRevokePermission) Get() *RevokePermission {
	return v.value
}

func (v *NullableRevokePermission) Set(val *RevokePermission) {
	v.value = val
	v.isSet = true
}

func (v NullableRevokePermission) IsSet() bool {
	return v.isSet
}

func (v *NullableRevokePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevokePermission(val *RevokePermission) *NullableRevokePermission {
	return &NullableRevokePermission{value: val, isSet: true}
}

func (v NullableRevokePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevokePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
