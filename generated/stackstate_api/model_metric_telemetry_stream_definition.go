/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MetricTelemetryStreamDefinition struct for MetricTelemetryStreamDefinition
type MetricTelemetryStreamDefinition struct {
	Type string `json:"_type"`
	BindQuery string `json:"bindQuery"`
	DataSourceId int64 `json:"dataSourceId"`
	Description *string `json:"description,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	Labels []string `json:"labels"`
	LastUpdateTimestamp *int64 `json:"lastUpdateTimestamp,omitempty"`
	MetricValuation MetricValuation `json:"metricValuation"`
	Name string `json:"name"`
	OwnedBy *string `json:"ownedBy,omitempty"`
	Priority TelemetryStreamPriority `json:"priority"`
	TelemetryQuery MetricTelemetryQuery `json:"telemetryQuery"`
	TopologyMapping []TopologyMapping `json:"topologyMapping"`
}

// NewMetricTelemetryStreamDefinition instantiates a new MetricTelemetryStreamDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricTelemetryStreamDefinition(type_ string, bindQuery string, dataSourceId int64, labels []string, metricValuation MetricValuation, name string, priority TelemetryStreamPriority, telemetryQuery MetricTelemetryQuery, topologyMapping []TopologyMapping) *MetricTelemetryStreamDefinition {
	this := MetricTelemetryStreamDefinition{}
	this.Type = type_
	this.BindQuery = bindQuery
	this.DataSourceId = dataSourceId
	this.Labels = labels
	this.MetricValuation = metricValuation
	this.Name = name
	this.Priority = priority
	this.TelemetryQuery = telemetryQuery
	this.TopologyMapping = topologyMapping
	return &this
}

// NewMetricTelemetryStreamDefinitionWithDefaults instantiates a new MetricTelemetryStreamDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricTelemetryStreamDefinitionWithDefaults() *MetricTelemetryStreamDefinition {
	this := MetricTelemetryStreamDefinition{}
	return &this
}

// GetType returns the Type field value
func (o *MetricTelemetryStreamDefinition) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MetricTelemetryStreamDefinition) SetType(v string) {
	o.Type = v
}

// GetBindQuery returns the BindQuery field value
func (o *MetricTelemetryStreamDefinition) GetBindQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BindQuery
}

// GetBindQueryOk returns a tuple with the BindQuery field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetBindQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BindQuery, true
}

// SetBindQuery sets field value
func (o *MetricTelemetryStreamDefinition) SetBindQuery(v string) {
	o.BindQuery = v
}

// GetDataSourceId returns the DataSourceId field value
func (o *MetricTelemetryStreamDefinition) GetDataSourceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DataSourceId
}

// GetDataSourceIdOk returns a tuple with the DataSourceId field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetDataSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataSourceId, true
}

// SetDataSourceId sets field value
func (o *MetricTelemetryStreamDefinition) SetDataSourceId(v int64) {
	o.DataSourceId = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetricTelemetryStreamDefinition) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetricTelemetryStreamDefinition) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetricTelemetryStreamDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetricTelemetryStreamDefinition) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetricTelemetryStreamDefinition) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *MetricTelemetryStreamDefinition) SetId(v int64) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MetricTelemetryStreamDefinition) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MetricTelemetryStreamDefinition) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MetricTelemetryStreamDefinition) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetLabels returns the Labels field value
func (o *MetricTelemetryStreamDefinition) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *MetricTelemetryStreamDefinition) SetLabels(v []string) {
	o.Labels = v
}

// GetLastUpdateTimestamp returns the LastUpdateTimestamp field value if set, zero value otherwise.
func (o *MetricTelemetryStreamDefinition) GetLastUpdateTimestamp() int64 {
	if o == nil || o.LastUpdateTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.LastUpdateTimestamp
}

// GetLastUpdateTimestampOk returns a tuple with the LastUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetLastUpdateTimestampOk() (*int64, bool) {
	if o == nil || o.LastUpdateTimestamp == nil {
		return nil, false
	}
	return o.LastUpdateTimestamp, true
}

// HasLastUpdateTimestamp returns a boolean if a field has been set.
func (o *MetricTelemetryStreamDefinition) HasLastUpdateTimestamp() bool {
	if o != nil && o.LastUpdateTimestamp != nil {
		return true
	}

	return false
}

// SetLastUpdateTimestamp gets a reference to the given int64 and assigns it to the LastUpdateTimestamp field.
func (o *MetricTelemetryStreamDefinition) SetLastUpdateTimestamp(v int64) {
	o.LastUpdateTimestamp = &v
}

// GetMetricValuation returns the MetricValuation field value
func (o *MetricTelemetryStreamDefinition) GetMetricValuation() MetricValuation {
	if o == nil {
		var ret MetricValuation
		return ret
	}

	return o.MetricValuation
}

// GetMetricValuationOk returns a tuple with the MetricValuation field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetMetricValuationOk() (*MetricValuation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricValuation, true
}

// SetMetricValuation sets field value
func (o *MetricTelemetryStreamDefinition) SetMetricValuation(v MetricValuation) {
	o.MetricValuation = v
}

// GetName returns the Name field value
func (o *MetricTelemetryStreamDefinition) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MetricTelemetryStreamDefinition) SetName(v string) {
	o.Name = v
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *MetricTelemetryStreamDefinition) GetOwnedBy() string {
	if o == nil || o.OwnedBy == nil {
		var ret string
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetOwnedByOk() (*string, bool) {
	if o == nil || o.OwnedBy == nil {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *MetricTelemetryStreamDefinition) HasOwnedBy() bool {
	if o != nil && o.OwnedBy != nil {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given string and assigns it to the OwnedBy field.
func (o *MetricTelemetryStreamDefinition) SetOwnedBy(v string) {
	o.OwnedBy = &v
}

// GetPriority returns the Priority field value
func (o *MetricTelemetryStreamDefinition) GetPriority() TelemetryStreamPriority {
	if o == nil {
		var ret TelemetryStreamPriority
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetPriorityOk() (*TelemetryStreamPriority, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *MetricTelemetryStreamDefinition) SetPriority(v TelemetryStreamPriority) {
	o.Priority = v
}

// GetTelemetryQuery returns the TelemetryQuery field value
func (o *MetricTelemetryStreamDefinition) GetTelemetryQuery() MetricTelemetryQuery {
	if o == nil {
		var ret MetricTelemetryQuery
		return ret
	}

	return o.TelemetryQuery
}

// GetTelemetryQueryOk returns a tuple with the TelemetryQuery field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetTelemetryQueryOk() (*MetricTelemetryQuery, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelemetryQuery, true
}

// SetTelemetryQuery sets field value
func (o *MetricTelemetryStreamDefinition) SetTelemetryQuery(v MetricTelemetryQuery) {
	o.TelemetryQuery = v
}

// GetTopologyMapping returns the TopologyMapping field value
func (o *MetricTelemetryStreamDefinition) GetTopologyMapping() []TopologyMapping {
	if o == nil {
		var ret []TopologyMapping
		return ret
	}

	return o.TopologyMapping
}

// GetTopologyMappingOk returns a tuple with the TopologyMapping field value
// and a boolean to check if the value has been set.
func (o *MetricTelemetryStreamDefinition) GetTopologyMappingOk() ([]TopologyMapping, bool) {
	if o == nil {
		return nil, false
	}
	return o.TopologyMapping, true
}

// SetTopologyMapping sets field value
func (o *MetricTelemetryStreamDefinition) SetTopologyMapping(v []TopologyMapping) {
	o.TopologyMapping = v
}

func (o MetricTelemetryStreamDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["bindQuery"] = o.BindQuery
	}
	if true {
		toSerialize["dataSourceId"] = o.DataSourceId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if o.LastUpdateTimestamp != nil {
		toSerialize["lastUpdateTimestamp"] = o.LastUpdateTimestamp
	}
	if true {
		toSerialize["metricValuation"] = o.MetricValuation
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.OwnedBy != nil {
		toSerialize["ownedBy"] = o.OwnedBy
	}
	if true {
		toSerialize["priority"] = o.Priority
	}
	if true {
		toSerialize["telemetryQuery"] = o.TelemetryQuery
	}
	if true {
		toSerialize["topologyMapping"] = o.TopologyMapping
	}
	return json.Marshal(toSerialize)
}

type NullableMetricTelemetryStreamDefinition struct {
	value *MetricTelemetryStreamDefinition
	isSet bool
}

func (v NullableMetricTelemetryStreamDefinition) Get() *MetricTelemetryStreamDefinition {
	return v.value
}

func (v *NullableMetricTelemetryStreamDefinition) Set(val *MetricTelemetryStreamDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricTelemetryStreamDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricTelemetryStreamDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricTelemetryStreamDefinition(val *MetricTelemetryStreamDefinition) *NullableMetricTelemetryStreamDefinition {
	return &NullableMetricTelemetryStreamDefinition{value: val, isSet: true}
}

func (v NullableMetricTelemetryStreamDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricTelemetryStreamDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


