/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TopologyStreamError struct for TopologyStreamError
type TopologyStreamError struct {
	Level      MessageLevel `json:"level"`
	Message    string       `json:"message"`
	ExternalId *string      `json:"externalId,omitempty"`
}

// NewTopologyStreamError instantiates a new TopologyStreamError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopologyStreamError(level MessageLevel, message string) *TopologyStreamError {
	this := TopologyStreamError{}
	this.Level = level
	this.Message = message
	return &this
}

// NewTopologyStreamErrorWithDefaults instantiates a new TopologyStreamError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopologyStreamErrorWithDefaults() *TopologyStreamError {
	this := TopologyStreamError{}
	return &this
}

// GetLevel returns the Level field value
func (o *TopologyStreamError) GetLevel() MessageLevel {
	if o == nil {
		var ret MessageLevel
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *TopologyStreamError) GetLevelOk() (*MessageLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *TopologyStreamError) SetLevel(v MessageLevel) {
	o.Level = v
}

// GetMessage returns the Message field value
func (o *TopologyStreamError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TopologyStreamError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TopologyStreamError) SetMessage(v string) {
	o.Message = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *TopologyStreamError) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopologyStreamError) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *TopologyStreamError) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *TopologyStreamError) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o TopologyStreamError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["level"] = o.Level
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	return json.Marshal(toSerialize)
}

type NullableTopologyStreamError struct {
	value *TopologyStreamError
	isSet bool
}

func (v NullableTopologyStreamError) Get() *TopologyStreamError {
	return v.value
}

func (v *NullableTopologyStreamError) Set(val *TopologyStreamError) {
	v.value = val
	v.isSet = true
}

func (v NullableTopologyStreamError) IsSet() bool {
	return v.isSet
}

func (v *NullableTopologyStreamError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopologyStreamError(val *TopologyStreamError) *NullableTopologyStreamError {
	return &NullableTopologyStreamError{value: val, isSet: true}
}

func (v NullableTopologyStreamError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopologyStreamError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
