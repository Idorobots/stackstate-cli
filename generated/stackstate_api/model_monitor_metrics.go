/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorMetrics struct for MonitorMetrics
type MonitorMetrics struct {
	HealthSyncServiceMetrics *HealthStreamMetrics  `json:"healthSyncServiceMetrics,omitempty"`
	RuntimeMetrics           MonitorRuntimeMetrics `json:"runtimeMetrics"`
}

// NewMonitorMetrics instantiates a new MonitorMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorMetrics(runtimeMetrics MonitorRuntimeMetrics) *MonitorMetrics {
	this := MonitorMetrics{}
	this.RuntimeMetrics = runtimeMetrics
	return &this
}

// NewMonitorMetricsWithDefaults instantiates a new MonitorMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorMetricsWithDefaults() *MonitorMetrics {
	this := MonitorMetrics{}
	return &this
}

// GetHealthSyncServiceMetrics returns the HealthSyncServiceMetrics field value if set, zero value otherwise.
func (o *MonitorMetrics) GetHealthSyncServiceMetrics() HealthStreamMetrics {
	if o == nil || o.HealthSyncServiceMetrics == nil {
		var ret HealthStreamMetrics
		return ret
	}
	return *o.HealthSyncServiceMetrics
}

// GetHealthSyncServiceMetricsOk returns a tuple with the HealthSyncServiceMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorMetrics) GetHealthSyncServiceMetricsOk() (*HealthStreamMetrics, bool) {
	if o == nil || o.HealthSyncServiceMetrics == nil {
		return nil, false
	}
	return o.HealthSyncServiceMetrics, true
}

// HasHealthSyncServiceMetrics returns a boolean if a field has been set.
func (o *MonitorMetrics) HasHealthSyncServiceMetrics() bool {
	if o != nil && o.HealthSyncServiceMetrics != nil {
		return true
	}

	return false
}

// SetHealthSyncServiceMetrics gets a reference to the given HealthStreamMetrics and assigns it to the HealthSyncServiceMetrics field.
func (o *MonitorMetrics) SetHealthSyncServiceMetrics(v HealthStreamMetrics) {
	o.HealthSyncServiceMetrics = &v
}

// GetRuntimeMetrics returns the RuntimeMetrics field value
func (o *MonitorMetrics) GetRuntimeMetrics() MonitorRuntimeMetrics {
	if o == nil {
		var ret MonitorRuntimeMetrics
		return ret
	}

	return o.RuntimeMetrics
}

// GetRuntimeMetricsOk returns a tuple with the RuntimeMetrics field value
// and a boolean to check if the value has been set.
func (o *MonitorMetrics) GetRuntimeMetricsOk() (*MonitorRuntimeMetrics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuntimeMetrics, true
}

// SetRuntimeMetrics sets field value
func (o *MonitorMetrics) SetRuntimeMetrics(v MonitorRuntimeMetrics) {
	o.RuntimeMetrics = v
}

func (o MonitorMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HealthSyncServiceMetrics != nil {
		toSerialize["healthSyncServiceMetrics"] = o.HealthSyncServiceMetrics
	}
	if true {
		toSerialize["runtimeMetrics"] = o.RuntimeMetrics
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorMetrics struct {
	value *MonitorMetrics
	isSet bool
}

func (v NullableMonitorMetrics) Get() *MonitorMetrics {
	return v.value
}

func (v *NullableMonitorMetrics) Set(val *MonitorMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorMetrics(val *MonitorMetrics) *NullableMonitorMetrics {
	return &NullableMonitorMetrics{value: val, isSet: true}
}

func (v NullableMonitorMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
