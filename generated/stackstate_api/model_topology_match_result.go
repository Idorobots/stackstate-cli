/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TopologyMatchResult struct for TopologyMatchResult
type TopologyMatchResult struct {
	MatchedCheckStates int32 `json:"matchedCheckStates"`
	UnmatchedCheckStates []UnmatchedCheckState `json:"unmatchedCheckStates"`
	MultipleMatchesCheckStates []MultipleMatchesCheckState `json:"multipleMatchesCheckStates"`
}

// NewTopologyMatchResult instantiates a new TopologyMatchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopologyMatchResult(matchedCheckStates int32, unmatchedCheckStates []UnmatchedCheckState, multipleMatchesCheckStates []MultipleMatchesCheckState) *TopologyMatchResult {
	this := TopologyMatchResult{}
	this.MatchedCheckStates = matchedCheckStates
	this.UnmatchedCheckStates = unmatchedCheckStates
	this.MultipleMatchesCheckStates = multipleMatchesCheckStates
	return &this
}

// NewTopologyMatchResultWithDefaults instantiates a new TopologyMatchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopologyMatchResultWithDefaults() *TopologyMatchResult {
	this := TopologyMatchResult{}
	return &this
}

// GetMatchedCheckStates returns the MatchedCheckStates field value
func (o *TopologyMatchResult) GetMatchedCheckStates() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MatchedCheckStates
}

// GetMatchedCheckStatesOk returns a tuple with the MatchedCheckStates field value
// and a boolean to check if the value has been set.
func (o *TopologyMatchResult) GetMatchedCheckStatesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchedCheckStates, true
}

// SetMatchedCheckStates sets field value
func (o *TopologyMatchResult) SetMatchedCheckStates(v int32) {
	o.MatchedCheckStates = v
}

// GetUnmatchedCheckStates returns the UnmatchedCheckStates field value
func (o *TopologyMatchResult) GetUnmatchedCheckStates() []UnmatchedCheckState {
	if o == nil {
		var ret []UnmatchedCheckState
		return ret
	}

	return o.UnmatchedCheckStates
}

// GetUnmatchedCheckStatesOk returns a tuple with the UnmatchedCheckStates field value
// and a boolean to check if the value has been set.
func (o *TopologyMatchResult) GetUnmatchedCheckStatesOk() ([]UnmatchedCheckState, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnmatchedCheckStates, true
}

// SetUnmatchedCheckStates sets field value
func (o *TopologyMatchResult) SetUnmatchedCheckStates(v []UnmatchedCheckState) {
	o.UnmatchedCheckStates = v
}

// GetMultipleMatchesCheckStates returns the MultipleMatchesCheckStates field value
func (o *TopologyMatchResult) GetMultipleMatchesCheckStates() []MultipleMatchesCheckState {
	if o == nil {
		var ret []MultipleMatchesCheckState
		return ret
	}

	return o.MultipleMatchesCheckStates
}

// GetMultipleMatchesCheckStatesOk returns a tuple with the MultipleMatchesCheckStates field value
// and a boolean to check if the value has been set.
func (o *TopologyMatchResult) GetMultipleMatchesCheckStatesOk() ([]MultipleMatchesCheckState, bool) {
	if o == nil {
		return nil, false
	}
	return o.MultipleMatchesCheckStates, true
}

// SetMultipleMatchesCheckStates sets field value
func (o *TopologyMatchResult) SetMultipleMatchesCheckStates(v []MultipleMatchesCheckState) {
	o.MultipleMatchesCheckStates = v
}

func (o TopologyMatchResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["matchedCheckStates"] = o.MatchedCheckStates
	}
	if true {
		toSerialize["unmatchedCheckStates"] = o.UnmatchedCheckStates
	}
	if true {
		toSerialize["multipleMatchesCheckStates"] = o.MultipleMatchesCheckStates
	}
	return json.Marshal(toSerialize)
}

type NullableTopologyMatchResult struct {
	value *TopologyMatchResult
	isSet bool
}

func (v NullableTopologyMatchResult) Get() *TopologyMatchResult {
	return v.value
}

func (v *NullableTopologyMatchResult) Set(val *TopologyMatchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTopologyMatchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTopologyMatchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopologyMatchResult(val *TopologyMatchResult) *NullableTopologyMatchResult {
	return &NullableTopologyMatchResult{value: val, isSet: true}
}

func (v NullableTopologyMatchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopologyMatchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


