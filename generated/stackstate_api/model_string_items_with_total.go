/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// StringItemsWithTotal struct for StringItemsWithTotal
type StringItemsWithTotal struct {
	Items []string `json:"items"`
	Total int64 `json:"total"`
}

// NewStringItemsWithTotal instantiates a new StringItemsWithTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStringItemsWithTotal(items []string, total int64) *StringItemsWithTotal {
	this := StringItemsWithTotal{}
	this.Items = items
	this.Total = total
	return &this
}

// NewStringItemsWithTotalWithDefaults instantiates a new StringItemsWithTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStringItemsWithTotalWithDefaults() *StringItemsWithTotal {
	this := StringItemsWithTotal{}
	return &this
}

// GetItems returns the Items field value
func (o *StringItemsWithTotal) GetItems() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *StringItemsWithTotal) GetItemsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *StringItemsWithTotal) SetItems(v []string) {
	o.Items = v
}

// GetTotal returns the Total field value
func (o *StringItemsWithTotal) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *StringItemsWithTotal) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *StringItemsWithTotal) SetTotal(v int64) {
	o.Total = v
}

func (o StringItemsWithTotal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableStringItemsWithTotal struct {
	value *StringItemsWithTotal
	isSet bool
}

func (v NullableStringItemsWithTotal) Get() *StringItemsWithTotal {
	return v.value
}

func (v *NullableStringItemsWithTotal) Set(val *StringItemsWithTotal) {
	v.value = val
	v.isSet = true
}

func (v NullableStringItemsWithTotal) IsSet() bool {
	return v.isSet
}

func (v *NullableStringItemsWithTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStringItemsWithTotal(val *StringItemsWithTotal) *NullableStringItemsWithTotal {
	return &NullableStringItemsWithTotal{value: val, isSet: true}
}

func (v NullableStringItemsWithTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStringItemsWithTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


