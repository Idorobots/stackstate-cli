/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TopologyTimeOutOfRange struct for TopologyTimeOutOfRange
type TopologyTimeOutOfRange struct {
	Type string `json:"_type"`
	Message string `json:"message"`
	TopologyTimeMs int32 `json:"topologyTimeMs"`
	LowerBoundMs int32 `json:"lowerBoundMs"`
	UpperBound string `json:"upperBound"`
}

// NewTopologyTimeOutOfRange instantiates a new TopologyTimeOutOfRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopologyTimeOutOfRange(type_ string, message string, topologyTimeMs int32, lowerBoundMs int32, upperBound string) *TopologyTimeOutOfRange {
	this := TopologyTimeOutOfRange{}
	this.Type = type_
	this.Message = message
	this.TopologyTimeMs = topologyTimeMs
	this.LowerBoundMs = lowerBoundMs
	this.UpperBound = upperBound
	return &this
}

// NewTopologyTimeOutOfRangeWithDefaults instantiates a new TopologyTimeOutOfRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopologyTimeOutOfRangeWithDefaults() *TopologyTimeOutOfRange {
	this := TopologyTimeOutOfRange{}
	return &this
}

// GetType returns the Type field value
func (o *TopologyTimeOutOfRange) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TopologyTimeOutOfRange) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TopologyTimeOutOfRange) SetType(v string) {
	o.Type = v
}

// GetMessage returns the Message field value
func (o *TopologyTimeOutOfRange) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TopologyTimeOutOfRange) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TopologyTimeOutOfRange) SetMessage(v string) {
	o.Message = v
}

// GetTopologyTimeMs returns the TopologyTimeMs field value
func (o *TopologyTimeOutOfRange) GetTopologyTimeMs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TopologyTimeMs
}

// GetTopologyTimeMsOk returns a tuple with the TopologyTimeMs field value
// and a boolean to check if the value has been set.
func (o *TopologyTimeOutOfRange) GetTopologyTimeMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopologyTimeMs, true
}

// SetTopologyTimeMs sets field value
func (o *TopologyTimeOutOfRange) SetTopologyTimeMs(v int32) {
	o.TopologyTimeMs = v
}

// GetLowerBoundMs returns the LowerBoundMs field value
func (o *TopologyTimeOutOfRange) GetLowerBoundMs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LowerBoundMs
}

// GetLowerBoundMsOk returns a tuple with the LowerBoundMs field value
// and a boolean to check if the value has been set.
func (o *TopologyTimeOutOfRange) GetLowerBoundMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowerBoundMs, true
}

// SetLowerBoundMs sets field value
func (o *TopologyTimeOutOfRange) SetLowerBoundMs(v int32) {
	o.LowerBoundMs = v
}

// GetUpperBound returns the UpperBound field value
func (o *TopologyTimeOutOfRange) GetUpperBound() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpperBound
}

// GetUpperBoundOk returns a tuple with the UpperBound field value
// and a boolean to check if the value has been set.
func (o *TopologyTimeOutOfRange) GetUpperBoundOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpperBound, true
}

// SetUpperBound sets field value
func (o *TopologyTimeOutOfRange) SetUpperBound(v string) {
	o.UpperBound = v
}

func (o TopologyTimeOutOfRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["topologyTimeMs"] = o.TopologyTimeMs
	}
	if true {
		toSerialize["lowerBoundMs"] = o.LowerBoundMs
	}
	if true {
		toSerialize["upperBound"] = o.UpperBound
	}
	return json.Marshal(toSerialize)
}

type NullableTopologyTimeOutOfRange struct {
	value *TopologyTimeOutOfRange
	isSet bool
}

func (v NullableTopologyTimeOutOfRange) Get() *TopologyTimeOutOfRange {
	return v.value
}

func (v *NullableTopologyTimeOutOfRange) Set(val *TopologyTimeOutOfRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTopologyTimeOutOfRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTopologyTimeOutOfRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopologyTimeOutOfRange(val *TopologyTimeOutOfRange) *NullableTopologyTimeOutOfRange {
	return &NullableTopologyTimeOutOfRange{value: val, isSet: true}
}

func (v NullableTopologyTimeOutOfRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopologyTimeOutOfRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


