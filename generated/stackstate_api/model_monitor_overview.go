/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorOverview struct for MonitorOverview
type MonitorOverview struct {
	Monitors []MonitorStatus `json:"monitors"`
}

// NewMonitorOverview instantiates a new MonitorOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorOverview(monitors []MonitorStatus) *MonitorOverview {
	this := MonitorOverview{}
	this.Monitors = monitors
	return &this
}

// NewMonitorOverviewWithDefaults instantiates a new MonitorOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorOverviewWithDefaults() *MonitorOverview {
	this := MonitorOverview{}
	return &this
}

// GetMonitors returns the Monitors field value
func (o *MonitorOverview) GetMonitors() []MonitorStatus {
	if o == nil {
		var ret []MonitorStatus
		return ret
	}

	return o.Monitors
}

// GetMonitorsOk returns a tuple with the Monitors field value
// and a boolean to check if the value has been set.
func (o *MonitorOverview) GetMonitorsOk() ([]MonitorStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Monitors, true
}

// SetMonitors sets field value
func (o *MonitorOverview) SetMonitors(v []MonitorStatus) {
	o.Monitors = v
}

func (o MonitorOverview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["monitors"] = o.Monitors
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorOverview struct {
	value *MonitorOverview
	isSet bool
}

func (v NullableMonitorOverview) Get() *MonitorOverview {
	return v.value
}

func (v *NullableMonitorOverview) Set(val *MonitorOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorOverview(val *MonitorOverview) *NullableMonitorOverview {
	return &NullableMonitorOverview{value: val, isSet: true}
}

func (v NullableMonitorOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
