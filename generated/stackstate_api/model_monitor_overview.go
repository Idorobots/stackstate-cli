/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorOverview struct for MonitorOverview
type MonitorOverview struct {
	Monitor  Monitor         `json:"monitor"`
	Function MonitorFunction `json:"function"`
}

// NewMonitorOverview instantiates a new MonitorOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorOverview(monitor Monitor, function MonitorFunction) *MonitorOverview {
	this := MonitorOverview{}
	this.Monitor = monitor
	this.Function = function
	return &this
}

// NewMonitorOverviewWithDefaults instantiates a new MonitorOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorOverviewWithDefaults() *MonitorOverview {
	this := MonitorOverview{}
	return &this
}

// GetMonitor returns the Monitor field value
func (o *MonitorOverview) GetMonitor() Monitor {
	if o == nil {
		var ret Monitor
		return ret
	}

	return o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value
// and a boolean to check if the value has been set.
func (o *MonitorOverview) GetMonitorOk() (*Monitor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Monitor, true
}

// SetMonitor sets field value
func (o *MonitorOverview) SetMonitor(v Monitor) {
	o.Monitor = v
}

// GetFunction returns the Function field value
func (o *MonitorOverview) GetFunction() MonitorFunction {
	if o == nil {
		var ret MonitorFunction
		return ret
	}

	return o.Function
}

// GetFunctionOk returns a tuple with the Function field value
// and a boolean to check if the value has been set.
func (o *MonitorOverview) GetFunctionOk() (*MonitorFunction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Function, true
}

// SetFunction sets field value
func (o *MonitorOverview) SetFunction(v MonitorFunction) {
	o.Function = v
}

func (o MonitorOverview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["monitor"] = o.Monitor
	}
	if true {
		toSerialize["function"] = o.Function
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorOverview struct {
	value *MonitorOverview
	isSet bool
}

func (v NullableMonitorOverview) Get() *MonitorOverview {
	return v.value
}

func (v *NullableMonitorOverview) Set(val *MonitorOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorOverview(val *MonitorOverview) *NullableMonitorOverview {
	return &NullableMonitorOverview{value: val, isSet: true}
}

func (v NullableMonitorOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
