/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MetricStreamAnomalyData struct for MetricStreamAnomalyData
type MetricStreamAnomalyData struct {
	Type            string                 `json:"_type"`
	Severity        AnomalySeverity        `json:"severity"`
	SeverityScore   float64                `json:"severityScore"`
	CheckedInterval TimeRange              `json:"checkedInterval"`
	Explanation     string                 `json:"explanation"`
	ModelInfo       map[string]interface{} `json:"modelInfo"`
	ElementName     string                 `json:"elementName"`
	StreamName      string                 `json:"streamName"`
	Query           *AnnotationMetricQuery `json:"query,omitempty"`
}

// NewMetricStreamAnomalyData instantiates a new MetricStreamAnomalyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricStreamAnomalyData(type_ string, severity AnomalySeverity, severityScore float64, checkedInterval TimeRange, explanation string, modelInfo map[string]interface{}, elementName string, streamName string) *MetricStreamAnomalyData {
	this := MetricStreamAnomalyData{}
	this.Type = type_
	this.Severity = severity
	this.SeverityScore = severityScore
	this.CheckedInterval = checkedInterval
	this.Explanation = explanation
	this.ModelInfo = modelInfo
	this.ElementName = elementName
	this.StreamName = streamName
	return &this
}

// NewMetricStreamAnomalyDataWithDefaults instantiates a new MetricStreamAnomalyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricStreamAnomalyDataWithDefaults() *MetricStreamAnomalyData {
	this := MetricStreamAnomalyData{}
	return &this
}

// GetType returns the Type field value
func (o *MetricStreamAnomalyData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MetricStreamAnomalyData) SetType(v string) {
	o.Type = v
}

// GetSeverity returns the Severity field value
func (o *MetricStreamAnomalyData) GetSeverity() AnomalySeverity {
	if o == nil {
		var ret AnomalySeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetSeverityOk() (*AnomalySeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *MetricStreamAnomalyData) SetSeverity(v AnomalySeverity) {
	o.Severity = v
}

// GetSeverityScore returns the SeverityScore field value
func (o *MetricStreamAnomalyData) GetSeverityScore() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SeverityScore
}

// GetSeverityScoreOk returns a tuple with the SeverityScore field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetSeverityScoreOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeverityScore, true
}

// SetSeverityScore sets field value
func (o *MetricStreamAnomalyData) SetSeverityScore(v float64) {
	o.SeverityScore = v
}

// GetCheckedInterval returns the CheckedInterval field value
func (o *MetricStreamAnomalyData) GetCheckedInterval() TimeRange {
	if o == nil {
		var ret TimeRange
		return ret
	}

	return o.CheckedInterval
}

// GetCheckedIntervalOk returns a tuple with the CheckedInterval field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetCheckedIntervalOk() (*TimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckedInterval, true
}

// SetCheckedInterval sets field value
func (o *MetricStreamAnomalyData) SetCheckedInterval(v TimeRange) {
	o.CheckedInterval = v
}

// GetExplanation returns the Explanation field value
func (o *MetricStreamAnomalyData) GetExplanation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Explanation
}

// GetExplanationOk returns a tuple with the Explanation field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetExplanationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Explanation, true
}

// SetExplanation sets field value
func (o *MetricStreamAnomalyData) SetExplanation(v string) {
	o.Explanation = v
}

// GetModelInfo returns the ModelInfo field value
func (o *MetricStreamAnomalyData) GetModelInfo() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ModelInfo
}

// GetModelInfoOk returns a tuple with the ModelInfo field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetModelInfoOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModelInfo, true
}

// SetModelInfo sets field value
func (o *MetricStreamAnomalyData) SetModelInfo(v map[string]interface{}) {
	o.ModelInfo = v
}

// GetElementName returns the ElementName field value
func (o *MetricStreamAnomalyData) GetElementName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ElementName
}

// GetElementNameOk returns a tuple with the ElementName field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetElementNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElementName, true
}

// SetElementName sets field value
func (o *MetricStreamAnomalyData) SetElementName(v string) {
	o.ElementName = v
}

// GetStreamName returns the StreamName field value
func (o *MetricStreamAnomalyData) GetStreamName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StreamName
}

// GetStreamNameOk returns a tuple with the StreamName field value
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetStreamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreamName, true
}

// SetStreamName sets field value
func (o *MetricStreamAnomalyData) SetStreamName(v string) {
	o.StreamName = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *MetricStreamAnomalyData) GetQuery() AnnotationMetricQuery {
	if o == nil || o.Query == nil {
		var ret AnnotationMetricQuery
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStreamAnomalyData) GetQueryOk() (*AnnotationMetricQuery, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *MetricStreamAnomalyData) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given AnnotationMetricQuery and assigns it to the Query field.
func (o *MetricStreamAnomalyData) SetQuery(v AnnotationMetricQuery) {
	o.Query = &v
}

func (o MetricStreamAnomalyData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if true {
		toSerialize["severityScore"] = o.SeverityScore
	}
	if true {
		toSerialize["checkedInterval"] = o.CheckedInterval
	}
	if true {
		toSerialize["explanation"] = o.Explanation
	}
	if true {
		toSerialize["modelInfo"] = o.ModelInfo
	}
	if true {
		toSerialize["elementName"] = o.ElementName
	}
	if true {
		toSerialize["streamName"] = o.StreamName
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	return json.Marshal(toSerialize)
}

type NullableMetricStreamAnomalyData struct {
	value *MetricStreamAnomalyData
	isSet bool
}

func (v NullableMetricStreamAnomalyData) Get() *MetricStreamAnomalyData {
	return v.value
}

func (v *NullableMetricStreamAnomalyData) Set(val *MetricStreamAnomalyData) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricStreamAnomalyData) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricStreamAnomalyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricStreamAnomalyData(val *MetricStreamAnomalyData) *NullableMetricStreamAnomalyData {
	return &NullableMetricStreamAnomalyData{value: val, isSet: true}
}

func (v NullableMetricStreamAnomalyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricStreamAnomalyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
