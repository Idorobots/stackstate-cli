/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// FeedbackComment struct for FeedbackComment
type FeedbackComment struct {
	Author    string `json:"author"`
	Text      string `json:"text"`
	Timestamp int64  `json:"timestamp"`
}

// NewFeedbackComment instantiates a new FeedbackComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedbackComment(author string, text string, timestamp int64) *FeedbackComment {
	this := FeedbackComment{}
	this.Author = author
	this.Text = text
	this.Timestamp = timestamp
	return &this
}

// NewFeedbackCommentWithDefaults instantiates a new FeedbackComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedbackCommentWithDefaults() *FeedbackComment {
	this := FeedbackComment{}
	return &this
}

// GetAuthor returns the Author field value
func (o *FeedbackComment) GetAuthor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *FeedbackComment) GetAuthorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Author, true
}

// SetAuthor sets field value
func (o *FeedbackComment) SetAuthor(v string) {
	o.Author = v
}

// GetText returns the Text field value
func (o *FeedbackComment) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *FeedbackComment) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *FeedbackComment) SetText(v string) {
	o.Text = v
}

// GetTimestamp returns the Timestamp field value
func (o *FeedbackComment) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *FeedbackComment) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *FeedbackComment) SetTimestamp(v int64) {
	o.Timestamp = v
}

func (o FeedbackComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["author"] = o.Author
	}
	if true {
		toSerialize["text"] = o.Text
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableFeedbackComment struct {
	value *FeedbackComment
	isSet bool
}

func (v NullableFeedbackComment) Get() *FeedbackComment {
	return v.value
}

func (v *NullableFeedbackComment) Set(val *FeedbackComment) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedbackComment) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedbackComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedbackComment(val *FeedbackComment) *NullableFeedbackComment {
	return &NullableFeedbackComment{value: val, isSet: true}
}

func (v NullableFeedbackComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedbackComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
