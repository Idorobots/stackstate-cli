/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorStreamStatus struct for MonitorStreamStatus
type MonitorStreamStatus struct {
	Errors []MonitorStreamError `json:"errors,omitempty"`
	Metrics MonitorStreamMetrics `json:"metrics"`
	MonitorHealthStateStateCount int32 `json:"monitorHealthStateStateCount"`
}

// NewMonitorStreamStatus instantiates a new MonitorStreamStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorStreamStatus(metrics MonitorStreamMetrics, monitorHealthStateStateCount int32) *MonitorStreamStatus {
	this := MonitorStreamStatus{}
	this.Metrics = metrics
	this.MonitorHealthStateStateCount = monitorHealthStateStateCount
	return &this
}

// NewMonitorStreamStatusWithDefaults instantiates a new MonitorStreamStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorStreamStatusWithDefaults() *MonitorStreamStatus {
	this := MonitorStreamStatus{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *MonitorStreamStatus) GetErrors() []MonitorStreamError {
	if o == nil || o.Errors == nil {
		var ret []MonitorStreamError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorStreamStatus) GetErrorsOk() ([]MonitorStreamError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *MonitorStreamStatus) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []MonitorStreamError and assigns it to the Errors field.
func (o *MonitorStreamStatus) SetErrors(v []MonitorStreamError) {
	o.Errors = v
}

// GetMetrics returns the Metrics field value
func (o *MonitorStreamStatus) GetMetrics() MonitorStreamMetrics {
	if o == nil {
		var ret MonitorStreamMetrics
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *MonitorStreamStatus) GetMetricsOk() (*MonitorStreamMetrics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *MonitorStreamStatus) SetMetrics(v MonitorStreamMetrics) {
	o.Metrics = v
}

// GetMonitorHealthStateStateCount returns the MonitorHealthStateStateCount field value
func (o *MonitorStreamStatus) GetMonitorHealthStateStateCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MonitorHealthStateStateCount
}

// GetMonitorHealthStateStateCountOk returns a tuple with the MonitorHealthStateStateCount field value
// and a boolean to check if the value has been set.
func (o *MonitorStreamStatus) GetMonitorHealthStateStateCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MonitorHealthStateStateCount, true
}

// SetMonitorHealthStateStateCount sets field value
func (o *MonitorStreamStatus) SetMonitorHealthStateStateCount(v int32) {
	o.MonitorHealthStateStateCount = v
}

func (o MonitorStreamStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	if true {
		toSerialize["monitorHealthStateStateCount"] = o.MonitorHealthStateStateCount
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorStreamStatus struct {
	value *MonitorStreamStatus
	isSet bool
}

func (v NullableMonitorStreamStatus) Get() *MonitorStreamStatus {
	return v.value
}

func (v *NullableMonitorStreamStatus) Set(val *MonitorStreamStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorStreamStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorStreamStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorStreamStatus(val *MonitorStreamStatus) *NullableMonitorStreamStatus {
	return &NullableMonitorStreamStatus{value: val, isSet: true}
}

func (v NullableMonitorStreamStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorStreamStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


