/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorStatus struct for MonitorStatus
type MonitorStatus struct {
	Monitor Monitor `json:"monitor"`
	Status HealthStreamStatus `json:"status"`
	TopologyMatchResult TopologyMatchResult `json:"topologyMatchResult"`
}

// NewMonitorStatus instantiates a new MonitorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorStatus(monitor Monitor, status HealthStreamStatus, topologyMatchResult TopologyMatchResult) *MonitorStatus {
	this := MonitorStatus{}
	this.Monitor = monitor
	this.Status = status
	this.TopologyMatchResult = topologyMatchResult
	return &this
}

// NewMonitorStatusWithDefaults instantiates a new MonitorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorStatusWithDefaults() *MonitorStatus {
	this := MonitorStatus{}
	return &this
}

// GetMonitor returns the Monitor field value
func (o *MonitorStatus) GetMonitor() Monitor {
	if o == nil {
		var ret Monitor
		return ret
	}

	return o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value
// and a boolean to check if the value has been set.
func (o *MonitorStatus) GetMonitorOk() (*Monitor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Monitor, true
}

// SetMonitor sets field value
func (o *MonitorStatus) SetMonitor(v Monitor) {
	o.Monitor = v
}

// GetStatus returns the Status field value
func (o *MonitorStatus) GetStatus() HealthStreamStatus {
	if o == nil {
		var ret HealthStreamStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MonitorStatus) GetStatusOk() (*HealthStreamStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MonitorStatus) SetStatus(v HealthStreamStatus) {
	o.Status = v
}

// GetTopologyMatchResult returns the TopologyMatchResult field value
func (o *MonitorStatus) GetTopologyMatchResult() TopologyMatchResult {
	if o == nil {
		var ret TopologyMatchResult
		return ret
	}

	return o.TopologyMatchResult
}

// GetTopologyMatchResultOk returns a tuple with the TopologyMatchResult field value
// and a boolean to check if the value has been set.
func (o *MonitorStatus) GetTopologyMatchResultOk() (*TopologyMatchResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopologyMatchResult, true
}

// SetTopologyMatchResult sets field value
func (o *MonitorStatus) SetTopologyMatchResult(v TopologyMatchResult) {
	o.TopologyMatchResult = v
}

func (o MonitorStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["monitor"] = o.Monitor
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["topologyMatchResult"] = o.TopologyMatchResult
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorStatus struct {
	value *MonitorStatus
	isSet bool
}

func (v NullableMonitorStatus) Get() *MonitorStatus {
	return v.value
}

func (v *NullableMonitorStatus) Set(val *MonitorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorStatus(val *MonitorStatus) *NullableMonitorStatus {
	return &NullableMonitorStatus{value: val, isSet: true}
}

func (v NullableMonitorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


