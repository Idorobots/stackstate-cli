/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// ServiceTokenCreatedResponse struct for ServiceTokenCreatedResponse
type ServiceTokenCreatedResponse struct {
	Name string `json:"name"`
	Token string `json:"token"`
	Expiration *int64 `json:"expiration,omitempty"`
}

// NewServiceTokenCreatedResponse instantiates a new ServiceTokenCreatedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceTokenCreatedResponse(name string, token string) *ServiceTokenCreatedResponse {
	this := ServiceTokenCreatedResponse{}
	this.Name = name
	this.Token = token
	return &this
}

// NewServiceTokenCreatedResponseWithDefaults instantiates a new ServiceTokenCreatedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceTokenCreatedResponseWithDefaults() *ServiceTokenCreatedResponse {
	this := ServiceTokenCreatedResponse{}
	return &this
}

// GetName returns the Name field value
func (o *ServiceTokenCreatedResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceTokenCreatedResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceTokenCreatedResponse) SetName(v string) {
	o.Name = v
}

// GetToken returns the Token field value
func (o *ServiceTokenCreatedResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ServiceTokenCreatedResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ServiceTokenCreatedResponse) SetToken(v string) {
	o.Token = v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ServiceTokenCreatedResponse) GetExpiration() int64 {
	if o == nil || o.Expiration == nil {
		var ret int64
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTokenCreatedResponse) GetExpirationOk() (*int64, bool) {
	if o == nil || o.Expiration == nil {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ServiceTokenCreatedResponse) HasExpiration() bool {
	if o != nil && o.Expiration != nil {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given int64 and assigns it to the Expiration field.
func (o *ServiceTokenCreatedResponse) SetExpiration(v int64) {
	o.Expiration = &v
}

func (o ServiceTokenCreatedResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if o.Expiration != nil {
		toSerialize["expiration"] = o.Expiration
	}
	return json.Marshal(toSerialize)
}

type NullableServiceTokenCreatedResponse struct {
	value *ServiceTokenCreatedResponse
	isSet bool
}

func (v NullableServiceTokenCreatedResponse) Get() *ServiceTokenCreatedResponse {
	return v.value
}

func (v *NullableServiceTokenCreatedResponse) Set(val *ServiceTokenCreatedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceTokenCreatedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceTokenCreatedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceTokenCreatedResponse(val *ServiceTokenCreatedResponse) *NullableServiceTokenCreatedResponse {
	return &NullableServiceTokenCreatedResponse{value: val, isSet: true}
}

func (v NullableServiceTokenCreatedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceTokenCreatedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


