stages:
  - check
  - deploy

.go-base:
  image: "nixos/nix:2.8.0"
  variables:
    NIX_CONFIG: "experimental-features = nix-command flakes"
    GOPATH: /go
    GITLAB_TOKEN: ${gitlab_api_scope_token}
  before_script:
  cache:
    paths:
      - /go/pkg/mod/

lint:
  extends: .go-base
  stage: check
  rules:
    - changes:
      - go.mod
      - go.sum
      - flake.lock
      - flake.nix
      - cmd/**
      - generated/**
      - internal/**
  script:
    - scripts/lint.sh

openapi-generate-check:
  extends: .go-base
  stage: check
  rules:
    - when: always
  script:
    - nix develop -c ./scripts/check-api-up-to-date.sh

license_scanning:
  stage: check
  image: "registry.gitlab.com/gitlab-org/security-products/analyzers/license-finder:3"
  rules:
    - changes:
      - go.mod
      - go.sum
      - flake.nix
      - flake.lock
  variables:
    LM_REPORT_VERSION: '2.1'
  allow_failure: true
  script:
    - /run.sh analyze .
  artifacts:
    reports:
      license_scanning: gl-license-scanning-report.json

dependency_scanning:
  stage: check
  image: "registry.gitlab.com/gitlab-org/security-products/analyzers/gemnasium:2"
  rules:
    - changes:
      - go.mod
      - go.sum
      - flake.nix
      - flake.lock
  script:
    - /analyzer run
  allow_failure: true
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

goreleaser_check:
  extends: .go-base
  stage: check
  rules:
    - changes:
      - .goreleaser.yml
  script:
    - nix develop -c goreleaser check

compile_test:
  extends: .go-base
  stage: check
  rules:
    - changes:
      - go.mod
      - go.sum
      - flake.lock
      - flake.nix
      - cmd/**
      - generated/**
      - internal/**
  script:
    - nix develop -c go test ./... -v
  tags:
    - sts-k8s-xl-runner

publish:
  stage: deploy
  extends: .go-base
  script:
  - if [ -z ${AWS_ACCESS_KEY_ID} ]; then echo "missing AWS_ACCESS_KEY_ID environment variable!"; exit 1; fi
  - nix develop -c goreleaser release
  tags:
    - sts-k8s-xl-runner
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]*/'
      when: always
    - when: never
